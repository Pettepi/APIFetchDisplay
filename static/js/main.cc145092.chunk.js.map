{"version":3,"sources":["index.js"],"names":["object","method","headers","Authorization","App","props","context","_this","Object","_Users_petteripiironen_my_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_petteripiironen_my_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_petteripiironen_my_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","dataSet","loading","fetchPosts","setState","fetch","then","response","json","interval","setInterval","clearInterval","_this$state","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","date","sensor1","sensor2","sensor3","sensor4","React","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"wMAIIA,EAAS,CACTC,OAAQ,MACRC,QAAS,CACLC,cACI,iLAKNC,cACF,SAAAA,EAAYC,EAAOC,GAAS,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IACxBG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAML,EAAOC,KAGjBQ,MAAQ,CACJC,QAAS,GACTC,SAAS,GANeT,EAoB5BU,WAAa,WACTV,EAAKW,SAAS,CAAEH,QAAS,GAAIC,SAAS,IACtCG,MAAM,8CAA+CnB,GAChDoB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAE,GAAI,OAAIf,EAAKW,SAAS,CAAEH,QAASO,EAAMN,SAAS,OAxBlCT,mFAYxBG,KAAKO,aACLP,KAAKa,SAAWC,YAAYd,KAAKO,WAAY,oDAIzCP,KAAKa,UAAUE,cAAcf,KAAKa,2CAUjC,IAAAG,EACwBhB,KAAKI,MAA1BE,EADHU,EACGV,QAASD,EADZW,EACYX,QACjB,OAAIC,EAAgBW,EAAAC,EAAAC,cAAA,uBAEhBF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,kBACWd,EAAQe,KACfH,EAAAC,EAAAC,cAAA,WAFJ,aAGed,EAAQgB,QACnBJ,EAAAC,EAAAC,cAAA,WAJJ,aAKed,EAAQiB,QACnBL,EAAAC,EAAAC,cAAA,WANJ,cAOgBd,EAAQkB,QACpBN,EAAAC,EAAAC,cAAA,WARJ,aASed,EAAQmB,iBA1CrBC,IAAMC,WAiDlBC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOd,EAAAC,EAAAC,cAACzB,EAAD,MAASiC","file":"static/js/main.cc145092.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// set header and method for API call\nlet object = {\n    method: \"GET\",\n    headers: {\n        Authorization:\n            \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTgsImVtYWlsIjoicGV0dGVyaS5waWlyb25lbkBnbWFpbC5jb20iLCJpYXQiOjE1NDk2MzEzNDh9.dH6cUoifYWEJNhbRX0At29XYlQ6h8brBFoitYCaRPgY\"\n    }\n};\n\n// create class\nclass App extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n    }\n    // declare state and store response in an array\n    state = {\n        dataSet: [],\n        loading: false\n    };\n\n    interval;\n    // set a timer to fetch data periodically since it updates every hour\n    componentDidMount() {\n        this.fetchPosts();\n        this.interval = setInterval(this.fetchPosts, 10000);\n    }\n    // if fetched, clear the the interval\n    componentWillUnmount() {\n        if (this.interval) clearInterval(this.interval);\n    }\n    // simple data fetch\n    fetchPosts = () => {\n        this.setState({ dataSet: [], loading: true });\n        fetch(\"https://opendata.hopefully.works/api/events\", object)\n            .then(response => response.json())\n            .then(json => this.setState({ dataSet: json, loading: false }));\n    };\n    // display the response data\n    render() {\n        const { loading, dataSet } = this.state;\n        if (loading) return <p>Loading...</p>; // tells user whats if data is loading\n        return (\n            <ul>\n                <p>\n                    Date: {dataSet.date}\n                    <br />\n                    Sensor1:  {dataSet.sensor1}\n                    <br />\n                    Sensor2:  {dataSet.sensor2}\n                    <br />\n                    Sensor3:   {dataSet.sensor3}\n                    <br />\n                    Sensor4:  {dataSet.sensor4}\n                </p>\n            </ul>\n        );\n    }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n\n"],"sourceRoot":""}